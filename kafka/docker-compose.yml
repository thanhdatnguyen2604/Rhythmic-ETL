version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - ./data/zookeeper:/var/lib/zookeeper/data
      - ./data/zookeeper/log:/var/lib/zookeeper/log
    networks:
      - rhythmic-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-vm:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_SEGMENT_BYTES: 100000000
      KAFKA_MAX_CONNECTIONS: 50
      KAFKA_MAX_CONNECTION_CREATION_RATE: 20
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 102400
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 102400
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
      KAFKA_NUM_NETWORK_THREADS: 2
      KAFKA_NUM_IO_THREADS: 2
      KAFKA_NUM_REPLICA_FETCHERS: 1
      KAFKA_MESSAGE_MAX_BYTES: 1000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 1048576
      KAFKA_LOG_CLEANER_IO_MAX_BYTES_PER_SECOND: 1048576
      KAFKA_LOG_CLEANER_THREADS: 1
    volumes:
      - ./data/kafka:/var/lib/kafka/data
      - ./config:/etc/kafka
    networks:
      - rhythmic-network

  eventsim:
    build:
      context: .
      dockerfile: Dockerfile.eventsim
    depends_on:
      - kafka
    volumes:
      - ./data:/data
    environment:
      - KAFKA_BROKER=kafka:9092
    networks:
      - rhythmic-network
    command: ["python", "eventsim.py", "--config", "/config/config.json"]

networks:
  rhythmic-network:
    driver: bridge 